@page "/learning"
@using HCM.Client.Components
@using HCM.Client.Components.DataList
@using MatBlazor;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage


<div class="row margin-bottom-small">
    <SearchBox @bind-SearchTerm="SearchTerm" PlaceHolder="Search Path..." />
</div>

<div class="btn-toolbar row margin-btm-small" role="toolbar">
    <button type="button" class="btn btn-outline-secondary mr-1">
        Learning Paths
    </button>
    <button type="button" class="btn btn-outline-secondary mr-1" @onclick="PathNav">
        Your learning path
    </button>
</div>

<!--Menu filter-->
<div class="filter_section">
    <div role="region">
        <h3 class="section_title">Filter</h3>
        <div class="defining_content">
            <MatNavMenu>
                <div id="accordion" class="accordion">
                    <MatNavSubMenu class="card" @bind-Expanded="@subMenuOpen">
                        <MatNavSubMenuHeader>
                            <MatNavItem AllowSelection="false" class="mb-0">
                                <a class="navMenuHeader">Level</a>
                            </MatNavItem>
                        </MatNavSubMenuHeader>
                        <MatNavSubMenuList>
                            <ul>
                                <MatNavItem>
                                    <span class="filter-title">Beginner</span><input type="checkbox" />
                                </MatNavItem>
                                <MatNavItem>
                                    <span class="filter-title">Intermediate</span><input type="checkbox" />
                                </MatNavItem>
                                <MatNavItem>
                                    <span class="filter-title">Advanced</span><input type="checkbox" />
                                </MatNavItem>
                            </ul>
                        </MatNavSubMenuList>
                    </MatNavSubMenu>
                    <MatNavSubMenu class="card">
                        <MatNavSubMenuHeader>
                            <MatNavItem AllowSelection="false" class="mb-0">
                                <a class="navMenuHeader">Expertises and skills</a>
                            </MatNavItem>
                        </MatNavSubMenuHeader>
                        <MatNavSubMenuList>
                            <ul>
                                <MatNavSubMenu class="card">
                                    <MatNavSubMenuHeader>
                                        <MatNavItem AllowSelection="false" class="mb-0">
                                            <a class="navMenuHeader">Soft skills</a>
                                        </MatNavItem>
                                    </MatNavSubMenuHeader>
                                    <MatNavSubMenuList>
                                        <ul>
                                            <MatNavItem>
                                                <span class="filter-title">Demo filter</span><input type="checkbox" />
                                            </MatNavItem>
                                        </ul>
                                    </MatNavSubMenuList>
                                </MatNavSubMenu>
                                <MatNavSubMenu class="card">
                                    <MatNavSubMenuHeader>
                                        <MatNavItem AllowSelection="false" class="mb-0">
                                            <a class="navMenuHeader">Expertises</a>
                                        </MatNavItem>
                                    </MatNavSubMenuHeader>
                                    <MatNavSubMenuList>
                                        <ul>
                                            <MatNavItem>
                                                <span class="filter-title">Demo filter</span><input type="checkbox" />
                                            </MatNavItem>
                                        </ul>
                                    </MatNavSubMenuList>
                                </MatNavSubMenu>
                            </ul>
                        </MatNavSubMenuList>
                    </MatNavSubMenu>
                    <MatNavSubMenu class="card">
                        <MatNavSubMenuHeader>
                            <MatNavItem AllowSelection="false" class="mb-0">
                                <a class="navMenuHeader">Roles</a>
                            </MatNavItem>
                        </MatNavSubMenuHeader>
                        <MatNavSubMenuList>
                            <ul>
                                <MatNavItem>
                                    <span class="filter-title">Developer</span><input type="checkbox" />
                                </MatNavItem>
                            </ul>
                        </MatNavSubMenuList>
                    </MatNavSubMenu>
                </div>
            </MatNavMenu>
        </div>
    </div>
</div>
<!--End menu filter -->
<!--Cards Courses-->
<div class="paths_section">
    <DataList TItem="GqlLearningPath" Items="@learningPaths" Style="DataListStyle.Cards" @ref="datalist">
        <Template Context="learningPaths">
            <article class="card_content list_item bg--trans">
                <div class="card_header data_card_header bg--blue">
                    <figure class="card_header card_img_top">
                        @*<img src="@item.Image" role="presentation" class="card_img" />*@
                    </figure>
                </div>
                <div class="card_body data_card_body">
                    <p class="card_type">Demo card type</p>
                    <a>
                        <strong class="card_data_title" @onclick="Go">@learningPaths.Name</strong>
                    </a>
                    <p class="card_metadata">@learningPaths.Description</p>
                    <div class="data_tags tags">
                        @{if (learningPaths != null)
                            {
                                foreach (var tag in learningPaths.Tags)
                                {
                                    <div class="badge badge-secondary tag">
                                        @tag.Name
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
                <div class="card_footer data_card_footer"></div>
            </article>

        </Template>
    </DataList>
    <div class="mx-auto" style="width: 215px;">
        <Pager Pages="@pages" OnPageChange="OnPageChange" />
    </div>
</div>
<!--End Courses-->

@code {
    private GraphQLApiClient gql = null;
    private List<GqlLearningPath> learningPaths = null;
    private Gql_LearningPathOrdering sorting = Gql_LearningPathOrdering.name_asc;

    private int page = 1;
    private int pages = 0;

    protected override async Task OnInitializedAsync()
    {
        var name = await sessionStorage.GetItemAsync<string>("name");

        if (name == null)
        {
            navigationManager.NavigateTo("/login");
        }
        else
        {
            await Search();
        }
    }

    private string searchTerm;
    public string SearchTerm
    {
        get { return searchTerm; }
        set { searchTerm = value; Search(); }
    }


    protected async Task Search()
    {
        gql = new GraphQLApiClient(httpClient, "http://localhost:7474/graphql/");

        var query = gql.LearningPath(string.Empty, fields: e => new GqlLearningPath
        {
            _id = e._id,
            Name = e.Name,
            Description = e.Description,
            Tags = new List<GqlTag>
        {
                new GqlTag
                {
                    Name = e.Tags[0].Name
                }
            }
        });
        learningPaths = await query.RunAsync();
        pages = 10;

        StateHasChanged();
    }

    private void OnPageChange()
    {
    }

    private void PathNav()
    {
        navigationManager.NavigateTo("/learning");
    }

    bool subMenuOpen;
    bool collapseNavMenu = true;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private DataList<GqlLearningPath> datalist;

    private void Go()
    {
        if (datalist.SelectedItem != null)
            navigationManager.NavigateTo("/learning/pathname/" + datalist.SelectedItem._id);
    }
}
