<div class="markdown_space">
    <div class="markdown_box">
        <form>
            <div class="markdown_box_content row">
                <span for="txtName" class="form-text section_title">Content:</span><br/>
                <textarea type="text" class="markdown_input learning_item_input form_control" placeholder="##Markdown content" @oninput="OnValueChanged"/>
                <div class="invalid-feedback">
                    You must create some content.
                </div>
            </div>
            <div class="markdown_box_footer row">
                <button class="btn btn-primary underline-first-letter button_mark">Save</button>
                <button class="btn btn-secondary underline-first-letter button_mark">Cancel</button>
            </div>
        </form>
    </div>
</div>

@code {

    private string learningItem;

    [Parameter]
    public string LearningItem
    {
        get { return learningItem; }
        set
        {
            learningItem = value;
            OnTextChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<string> OnTextChanged { get; set; }

    public void OnValueChanged(ChangeEventArgs ev)
    {
        LearningItem = (string)ev.Value;
        StateHasChanged();
    }
}