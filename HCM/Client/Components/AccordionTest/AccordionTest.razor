@using Microsoft.AspNetCore.Components;
@using HCM.Client.Components.ScoreRating;

@namespace HCM.Client.Components.AccordionTest

<CascadingValue Value="@this">
    @ChildContent
</CascadingValue>


<div class="accordion" id="accordionExample">
    @for (int i = 0; i <= Options.Count - 1; i++)
    {
        <div class="card">
            <div class="card-header" id="headingOne">
                <h5 class="mb-0">
                    <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#@("op"+i)" aria-expanded="true">
                        @Options[i].Title
                    </button>
                </h5>
            </div>
            <div id="@("op"+i)" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="card-body">
                            <ul class="list-group" style="border:none">
                                @foreach (var subSkill in Options[i].Subskills)
                                {
                                    <li class="list-group-item" style="border:none">@subSkill.Name</li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="card-body">
                            <ul class="list-group" style="border:none">
                                @foreach (var subSkill in Options[i].Subskills)
                                {
                                    <li class="list-group-item" style="border:none">
                                        <div class="container">
                                            <div class="score-rating">
                                                <input id="score-rb1" type="radio" name="rating" value="1" /><label for="score-rb1" class="bg--red"
                                                                                                                    title="Very Poor"></label>
                                                <input id="score-rb2" type="radio" name="rating" value="2" /><label for="score-rb2" class="bg--orange"
                                                                                                                    title="Poor"></label>
                                                <input id="score-rb3" type="radio" name="rating" value="3" checked /><label for="score-rb3" class="bg--yellow"
                                                                                                                            title="Good"></label>
                                                <input id="score-rb4" type="radio" name="rating" value="4" /><label for="score-rb4" class="bg--lightgreen"
                                                                                                                    title="Very Good"></label>
                                                <input id="score-rb5" type="radio" name="rating" value="5" /><label for="score-rb5" class="bg--green" title="Outstanding"></label>
                                            </div>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    int i = 0;
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    internal List<AccordionOption> Options { get; set; } = new List<AccordionOption>();
}
