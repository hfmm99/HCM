@using Microsoft.AspNetCore.Components;

<div class="input-group @Class">
    <div class="input-group-prepend">
        <button class="btn btn-outline-primary" type="button" title="First" @onclick='(() => CurrentPage = 1)'>❰❰</button>
    </div>
    <div class="input-group-prepend">
        <button class="btn btn-outline-primary" type="button" title="Previous" @onclick='(() => ChangePage(false))'>❮</button>
    </div>
    <select class="custom-select" @bind="CurrentPage">
        @for (int i = 1; i <= Pages; i++)
        {
            <option value="@i">@i</option>
        }
    </select>
    <div class="input-group-append">
        <button class="btn btn-outline-primary" type="button" title="Next" @onclick='(() => ChangePage(true))'>❯</button>
    </div>
    <div class="input-group-append">
        <button class="btn btn-outline-primary" type="button" title="Last" @onclick='(() => CurrentPage = Pages)'>❱❱</button>
    </div>
</div>

@code {

    private int currentPage = 1;
    public int CurrentPage
    {
        get => currentPage;
        set
        {
            currentPage = value;
            OnPageChange.InvokeAsync(new PageChangeEventArgs { Page = value });
        }
    }

    [Parameter]
    public int Pages { get; set; }

    /// <summary>
    ///  Event occurs when the user change of page.
    /// </summary>
    [Parameter]
    public EventCallback<PageChangeEventArgs> OnPageChange { get; set; }

    [Parameter]
    public string Class { get; set; } = "";

    private void ChangePage(bool ascending)
    {
        if (ascending && currentPage < Pages)
            CurrentPage++;
        else if (!ascending && currentPage > 1)
            CurrentPage--;
    }
}